<link rel="stylesheet" type="text/css" href="./sorter/chatsystem.css">
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript" src="./sorter/odai.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script src="/dist/js/bootstrap.min.js"></script>
<link href="/dist/css/bootstrap.min.css" rel="stylesheet" media="screen">
<script src="./sorter/jquery.tablesorter.min.js"></script>
<script type="text/javascript">

var socket = io.connect('http://agile-basin-6562.herokuapp.com/');


otherusername=new Array(30);
var ingame=0//ゲーム中かどうか判断するフラグ
var gamecheck=0;
youranswer="ネタが投稿されていません。これには１点をつけて下さい。";

loginuser=new Array(1)//ログイン中のユーザーを格納する

socket.on('userenter',function(data){//入室した事を知らせる&現在ログイン中のユーザーの表示

gamecheck=data.gamecheck;

if(ingame!=1){
whetheringame();
}
$(function(){
     loginuser=data.loginuser;
$("#enter").text(data.value+"さんが入室しました。");
    $("#loginuser li").remove();
for(var i=1; i<data.loginuser.length;i++){
  if(data.loginuser[i]!="NULL")
  { 
    showloginuser="<li>"+data.loginuser[i]+"</li>";

    $("#loginuser").append(showloginuser);
  }

}

});
});

socket.on('enter1',function(enter){
username=enter.value;
otherusername[0]=username;
roomnumber=enter.roomnum;
whetheringame();
otherusername = new Array(username);
$(function(){
socket.emit('userenter1',{roomnum:"1",username:username,});

});

});

socket.on('enter2',function(enter){
username=enter.value;
otherusername[0]=username;
roomnumber=enter.roomnum;

otherusername = new Array(username);
$(function(){
$("#enter").text(enter.value+"さんが入室しました。");
socket.emit('userenter2',{roomnum:"2",username:username,});

});

});

socket.on('enter3',function(enter){
username=enter.value;
otherusername[0]=username;
roomnumber=enter.roomnum;

otherusername = new Array(username);
$(function(){
socket.emit('userenter3',{roomnum:"3",username:username,});

});

});

socket.on('enter4',function(enter){
username=enter.value;
otherusername[0]=username;
roomnumber=enter.roomnum;

otherusername = new Array(username);
$(function(){
socket.emit('userenter4',{roomnum:"4",username:username,});

});

});

function whetheringame(){//入室した時にゲーム中だったらボタンを使えなくする

if(gamecheck=="1")
{

$('#start').attr('disabled', true);
 $("#odai").text("只今ゲーム中です。しばらくお待ち下さい。（チャットはできます）"); 

}

}

// サーバーからメッセージが来た時。もしくは、自分で送信した時。
socket.on('clientmessage', function(msg) {//メッセージを受け取った時の事。メッセージメソッドを受け取ったら。msgにはsendMSgで設定して、messageが格納されている
  // メッセージを画面に表示する
  var licount=$('#chatbox li').size();

  if(licount<40){
  $(function(){
  var receivemsg="<li class='list'>"+msg.username+":"+msg.value+"</li>";
  $("#chatbox").append(receivemsg); 
  
  });
  }
  else{
    $(function(){
  $("#chatbox li:first-child").remove();
    var receivemsg="<li class='list'>"+msg.username+":"+msg.value+"</li>";
  $("#chatbox").append(receivemsg); 
      });
  
  }
 $("#boxline").scrollTop($("#boxline")[0].scrollHeight);
});






socket.on('clientvotetime',function(){
if( ingame==1){
$(function(){
$("#inform").text("投票タイムです(同期ズレで結果が遅れる事があります）");
});
}
});

socket.on('clientanswerform',function(data){//採点用のネタを表示させる。

if(ingame==1){
otherusername.push(data.username);


$(function(){
$("#vote").append(data.value);
});
}
});




socket.on('start',function(odai){//お題を表示させ、ボタンを使えなくする。

$(function(){
$("#odai").text("お題:"+odai.value);
$('#start').attr('disabled', true);
});

});



function votebutton(){

if(ingame==1){//ゲーム中なら。
$(function(){
$("#confirm").empty();//投票を受け付けた事を知らせる部分を空にする
$("#vote").after("<div class='form-group'><div id='votebutton'></div><div>");//投票になったらボタンを追加する

$("#votebutton").append($('<input id="submitbutton" type="button" class="btn btn-primary" value="採点"　onclick="votesubmitcal()"/>'));//

$("#submitbutton").click(function(){

votesubmitcal();
});

});
}

}

function votesubmitcal(){//採点

$(function(){
$("#confirm").text("投票受け付けました");
});

for(var i=1;i<otherusername.length;i++){

for(var j=1;j<4;j++){

var pointcheck=$("#"+otherusername[i]+"check"+j+":checked").val();//ポイントを入れる

if(pointcheck!=undefined)
{

userpoints[otherusername[i]]=pointcheck;

}
}


}



}

// メッセージを送る。送信ぼたんが押されたら
function SendMsg() {


  var msg = document.getElementById("message").value;//フォームからデータを取って来てる

  $(function(){
  
  $("#message").val("");
  
  });

  // メッセージを発射する。発射されたメッセージはサーパーにいき、サーバーのメッセージイベントが起動され、全員の元へ行く。
  socket.emit('message', { value: msg,roomnum:roomnumber,username:username,}); //メッセージメソッドでメッセージを送信。valueにはmsgが格納
}

$(function(){

$("#message").keydown(function(e){//チャットのテキストエリアでエンターキーが押されたら

 if(e.keyCode==13)
 {
  SendMsg();
 }

});

 });


// 切断する
function DisConnect() {
  var msg = socket.socket.transport.sessid + "は切断しました。";
  // メッセージを発射する
  socket.emit('message', { value: msg });
  // socketを切断する
  socket.disconnect();
}


socket.on('clientinitialize',function(){
ingame=1;
$("#table").empty();//結果表示を空にする
$("#table").append($('<table class="table table-striped table-bordered" id="result"><thead><th width="120">名前</th><th width="150">ネタ</th><th width="60">点数</th><tbody id="tbody"></tbody></thead></table>'));
otherusername = new Array(username);
postusernamearray=new Array(1);
timerseconds=120;
votetimerseconds=(loginuser.length*12);
userpoints=new Array(100);

});


function getstart(){




$(function(){

var odaiarraylength=odaiarray.length;//お題を
rnd = Math.floor( Math.random() * odaiarraylength);
var currentodai=odaiarray[rnd];

var roomnum=roomnumber;

 socket.emit('start',{value:currentodai,roomnum:roomnumber,});//お題をセットする
 socket.emit('timer',{roomnum:roomnumber,});//タイマーを作動させる
 socket.emit('initialize',{roomnum:roomnumber,});//初期化処理
});

}

function answer(){
$(function(){

youranswer=$("#answer").val();
$("#confirm").text("投稿受け付けました");
});

}

socket.on('timer',function(){


timerid=setInterval(IntervalFunction , 1000);

});




function IntervalFunction(){//投稿用のタイマー関数



$(function(){

$("#timer").text(timerseconds);
timerseconds--;

});

if(timerseconds<0&&ingame==1)
{

clearInterval(timerid);
socket.emit('showanswerform',{value:youranswer,roomnum:roomnumber,username:username});
socket.emit('votetime',{roomnum:roomnumber});
votetimerset();
votebutton();//ボタンを表示させる
}


}

function　votetimerset(){

votetimerid=setInterval(votetimer , 1000);

}

function votetimer(){//投票用のタイマー関数


$(function(){

$("#timer").text(votetimerseconds);
votetimerseconds--;

});

if(votetimerseconds<0&&ingame==1)
{
votesubmitcal();
clearInterval(votetimerid);

for(var i=1;i<otherusername.length;i++){

socket.emit('sumpoints', { name:otherusername[i],points:userpoints[otherusername[i]],roomnum:roomnumber});
}

}


}

socket.on('showresult',function(result){//サーバーから送られてきた採点結果を表示する。

$(function(){
           var realresult=result.result;
$("#tbody").append(realresult);//採点結果を入れる
$("#result").tablesorter({sortList:[[2,1]]});//採点結果を降順に並び飼える

//これ以下は初期化処理
$('#start').attr('disabled', false);//ボタンを使えるようにする
$("#vote").empty();//ボタンを空にする
$("#votebutton").empty();//
$("#odai").empty();//
$("#inform").empty();//
$("#timer").empty();//
$("#confirm").empty();
gamecheck=0;
});

});

socket.on('userlogout',function(data){



for(var i=1;i<loginuser.length;i++)
{
  if(loginuser[i]==data.value)
  {
  
  loginuser.splice(i,1);
  }


}

$(function(){
$('#enter').text(data.value+"さんがログアウトしました");
  $("#loginuser li").remove();

for(var i=1; i<loginuser.length;i++){
  if(loginuser[i]!="NULL")
  { 
    showloginuser="<li>"+loginuser[i]+"</li>";

    $("#loginuser").append(showloginuser);
  }


}

});

socket.emit('userdelete',{roomnum:roomnumber,value:data.value})
});

window.document.onkeydown = function() {
    if (event.keyCode == 8) {
      alert("BackSpace キーが押されました");
      event.keyCode = null; // キー押下を無効に
    }
    if (event.keyCode == 116) {
      alert("F5 キーが押されました");
      event.keyCode = null;
      return false;
    }
  }


</script>

<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <link rel='stylesheet' href='/stylesheets/style.css' />
        <meta name="ROBOTS" content="NOINDEX" />
  </head>
  <body>

      <div id="title"> 大喜利チャットシステム </div> <h4>部屋番号:<%=roomnumber %></h4></br>
<div id="caution">
<h4>1 ゲーム中のログアウトはご遠慮下さい。ゲームの進行ができなくなります。</h4></br>
<h4>2　ゲーム中にログアウトしてバグってしまったら一度全員ブラウザバックをして、ログインし直して下さい</h4></br>
<h4>3　他不具合は全てブラウザバックで入り直すことで解決します。</h4></br>
</div>
</br>
</br>
<div id="currentloginuser"><h4>今ログイン中のユーザー</h4>
<h4><ul id="loginuser"><ul></h4></div>
<div id="enter"></div>
。

  <div class="box" id="chatcss">
    <h4>チャットコーナー</h4></br>
<div id="boxline"><ul id="chatbox"></ul></div>
</br>
<div class="row">
  <div class="form-group">
  <div class="col-xs-12">
  <input type="text" id="message" class="form-control" class="textform" value=""></br>
  <input type="button" value="発言" class="btn btn-primary" onclick="SendMsg()">
   </div>
    </div>
    </div>
  </div>

<div class="container">
  <div class="box">
  <h4>大喜利コーナー</h4>
  <h3><div id="odai"></div></h3></br>
  <h3><div id="inform"></div></h3></br>
  <h4 id="confirm"></h4>
  <h4 id="timer"></h4></br>
  <h4>回答フォーム<h4>
  <input type="text" id="answer"  class="textform" value=""> 
  <input id="answerbutton" type="button" class="btn btn-primary" value="お題に答える" onclick="answer()"><br><br>

   <div class="form-group">
    <input id="start" type="button" value="大喜利スタート" class="btn btn-primary" onclick="getstart()">
<br>

   <form id="vote"> </form>
   <div id="table">

</div>
  </form>



</div>

</br>

  </body>
</html>